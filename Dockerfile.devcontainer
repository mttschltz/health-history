FROM golang:1.22-alpine AS builder
WORKDIR /build

# TODO: Remove the copies and instead use the workspace folder?
COPY pb/go.mod pb/go.sum pb/main.go ./
COPY pb/hooks ./hooks
COPY pb/auditlog ./auditlog
RUN apk --no-cache add upx make git gcc libtool musl-dev ca-certificates dumb-init \
  && go mod tidy \
  && CGO_ENABLED=0 go build \
  && upx pocketbase

FROM golang:1.22-alpine AS dev

RUN go install github.com/cortesi/modd/cmd/modd@latest
# Install these to speed up the first time debugging Go in VSCode. It will
# install these by default on first run.
RUN go install -v github.com/go-delve/delve/cmd/dlv@latest
RUN go install -v golang.org/x/tools/gopls@latest
RUN go install -v  honnef.co/go/tools/cmd/staticcheck@2023.1.6

RUN apk add --update nodejs yarn git curl
RUN echo "Node version $(node --version)"
RUN echo "Yarn version $(yarn --version)"

RUN curl -L https://fly.io/install.sh | sh
ENV FLYCTL_INSTALL="/root/.fly"
ENV PATH="$FLYCTL_INSTALL/bin:$PATH"

WORKDIR /app/pb
# COPY --from=builder /build/pocketbase /app/pb/pocketbase
# COPY pb/pb_data ./pb_data #not needed
# COPY pb/pb_hooks ./pb_hooks
# COPY sk/build ./pb_public
# COPY pb/pb_migrations ./pb_migrations
# COPY pb/data ./data
# these are the volumes you could mount to your own dirs
# VOLUME pb_data pb_public pb_migrations pb_hooks data

EXPOSE 8090

CMD ["/app/pb/pocketbase","serve", "--http", "0.0.0.0:8090"]